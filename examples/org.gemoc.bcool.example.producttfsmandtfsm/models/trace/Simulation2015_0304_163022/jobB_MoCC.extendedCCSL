ClockConstraintSystem TFSMB {
	imports {
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as kernel ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as CCSL ;
		import "platform:/resource/org.gemoc.bcool.example.producttfsmandtfsm/interfaces/TFSMMoC.ccslLib" as TFSMMoC ;
		import "platform:/resource/org.gemoc.bcool.example.producttfsmandtfsm/models/jobB.tfsm" as TimedSystem ;
	}
	entryBlock mainBlock
	Block mainBlock {
		Expression pingintermediate_AllTriggeringOccurrences1 = Union
		( Clock2 -> t1_2_fire,
		Clock1 -> t1_2_fire )
		Expression t2_1_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> B_entering,
		SampledOnTrigger -> pong_occurs )
		Expression tinit_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> init_entering,
		SampledOnTrigger -> start_occurs )
		Expression t1_2_DelayFor_delayIsExpired_wrt_StateEntering = DelayFor
		( DelayForClockToDelay -> A_entering,
		DelayForClockForCounting -> sec_ticks,
		DelayForDelay -> t1_2after1onSec_afterDuration )
		Expression initintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> tinit_fire,
		Clock1 -> tinit_fire )
		Expression Bintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> t2_1_fire,
		Clock1 -> t2_1_fire )
		Expression Aintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> t1_2_fire,
		Clock1 -> t1_2_fire )
		Expression Bintermediate_allInputTransition1 = Union
		( Clock2 -> t1_2_fire,
		Clock1 -> t1_2_fire )
		Expression Aintermediate_allInputTransition1 = Union
		( Clock2 -> t2_1_fire,
		Clock1 -> tinit_fire )
		Expression Bintermediate_onlyOneFirst1 = OneTickAndNoMore
		( OneTickAndNoMoreClock -> B_start )
		Relation pingFSMEventSendReceive_occursWhenSolicitate [ FSMEventSendReceive ]
		( ClockA -> pingintermediate_AllTriggeringOccurrences1,
		ClockB -> ping_occurs )
		Relation t2_1Coincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> t2_1_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> t2_1_fire )
		Relation tinitCoincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> tinit_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> tinit_fire )
		Relation t1_2Coincides_fireWhenTemporalGuardHoldsOneTransition [ Coincides ]
		( Clock2 -> t1_2_DelayFor_delayIsExpired_wrt_StateEntering,
		Clock1 -> t1_2_fire )
		Relation initAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> init_entering,
		AlternatesRightClock -> init_leaving )
		Relation BAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> B_entering,
		AlternatesRightClock -> B_leaving )
		Relation AAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> A_entering,
		AlternatesRightClock -> A_leaving )
		Relation initCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> initintermediate_allFiredoutgoingTransition1,
		Clock1 -> init_leaving )
		Relation BCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> Bintermediate_allFiredoutgoingTransition1,
		Clock1 -> B_leaving )
		Relation ACoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> Aintermediate_allFiredoutgoingTransition1,
		Clock1 -> A_leaving )
		Relation BCauses_stateEntering [ Causes ]
		( LeftClock -> Bintermediate_allInputTransition1,
		RightClock -> B_entering )
		Relation ACauses_stateEntering [ Causes ]
		( LeftClock -> Aintermediate_allInputTransition1,
		RightClock -> A_entering )
		Relation Bintermediate_oneStateAtATime1_2 [ Exclusion ]
		( Clock1 -> A_entering,
		Clock2 -> B_entering )
		Relation Bintermediate_oneStateAtATime1_3 [ Exclusion ]
		( Clock1 -> A_entering,
		Clock2 -> init_entering )
		Relation Bintermediate_oneStateAtATime2_3 [ Exclusion ]
		( Clock1 -> B_entering,
		Clock2 -> init_entering )
		Relation Bintermediate_oneTransitionAtATime1_2 [ Exclusion ]
		( Clock1 -> t1_2_fire,
		Clock2 -> t2_1_fire )
		Relation Bintermediate_oneTransitionAtATime1_3 [ Exclusion ]
		( Clock1 -> t1_2_fire,
		Clock2 -> tinit_fire )
		Relation Bintermediate_oneTransitionAtATime2_3 [ Exclusion ]
		( Clock1 -> t2_1_fire,
		Clock2 -> tinit_fire )
		Relation BCoincides_firstIsInitialState [ Coincides ]
		( Clock2 -> B_start,
		Clock1 -> init_entering )
		Relation BCoincides_firstOnlyOnce [ Coincides ]
		( Clock2 -> B_start,
		Clock1 -> Bintermediate_onlyOneFirst1 )
		Clock sec_ticks : clock -> evt_sec_ticks
		( "sec",
		"sec::ticks()" )
		Clock t2_1_fire : clock -> evt_t2_1_fire
		( "t2_1",
		"t2_1::fire()" )
		Clock t1_2_fire : clock -> evt_t1_2_fire
		( "t1_2",
		"t1_2::fire()" )
		Clock tinit_fire : clock -> evt_tinit_fire
		( "tinit",
		"tinit::fire()" )
		Clock start_occurs : clock -> evt_start_occurs
		( "start" )
		Clock pong_occurs : clock -> evt_pong_occurs
		( "pong" )
		Clock ping_occurs : clock -> evt_ping_occurs
		( "ping" )
		Clock init_entering : clock -> evt_init_entering
		( "init" )
		Clock B_entering : clock -> evt_B_entering
		( "B" )
		Clock A_entering : clock -> evt_A_entering
		( "A" )
		Clock init_leaving : clock -> evt_init_leaving
		( "init" )
		Clock B_leaving : clock -> evt_B_leaving
		( "B" )
		Clock A_leaving : clock -> evt_A_leaving
		( "A" )
		Clock B_start : clock -> evt_B_start
		( "B" )
		Clock B_stall : clock -> evt_B_stall
		( "B" )
		Integer t1_2after1onSec_afterDuration : int = 1
	}
}