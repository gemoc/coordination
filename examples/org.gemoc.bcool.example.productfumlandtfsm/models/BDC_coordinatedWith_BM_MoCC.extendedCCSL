ClockConstraintSystem ProductTfsmwithfUMLGlobalClockCoordination {
	imports {
		import "platform:/resource/org.gemoc.bcool.example.productfumlandtfsm/library/bcoollib.ccslLib" as lib_2 ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as model_1_1 ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as model_1_2 ;
		import "platform:/resource/org.gemoc.bcool.example.productfumlandtfsm/interfaces/TFSMMoC.ccslLib" as model_1_3 ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as model_2_1 ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as model_2_2 ;
		import "platform:/resource/org.gemoc.bcool.example.productfumlandtfsm/interfaces/lib4RT.ccslLib" as model_2_3 ;
		import "platform:/resource/org.gemoc.bcool.example.productfumlandtfsm/models/BDC_MoCC.extendedCCSL" as inM1 ;
		import "platform:/resource/org.gemoc.bcool.example.productfumlandtfsm/models/BMC_MoCC.extendedCCSL" as inM2 ;
	}
	entryBlock mainBlock
	Block mainBlock {
		Expression syncAglobalclock_testdoClose_occurs = SampleBy
		( Sampler -> globalclock_test,
		Sampled -> "BarrierControl::mainBlock::doClose_occurs" )
		Expression syncBglobalclock_testdoClose_startAction = SampleBy
		( Sampler -> globalclock_test,
		Sampled -> "Model::mainBlock::doClose_startAction" )
		Expression syncAglobalclock_testclosed_occurs = SampleBy
		( Sampler -> globalclock_test,
		Sampled -> "BarrierControl::mainBlock::closed_occurs" )
		Expression syncBglobalclock_testclosed_startAction = SampleBy
		( Sampler -> globalclock_test,
		Sampled -> "Model::mainBlock::closed_startAction" )
		Relation
		MatchingandCoordinationSharedEventssyncAglobalclock_testdoClose_occurssyncBglobalclock_testdoClose_startAction [
		RendezVous ]
		( ClockB -> syncAglobalclock_testdoClose_occurs,
		ClockA -> syncBglobalclock_testdoClose_startAction )
		Relation MatchingandCoordinationSharedEventssyncAglobalclock_testclosed_occurssyncBglobalclock_testclosed_startAction
		[ RendezVous ]
		( ClockB -> syncAglobalclock_testclosed_occurs,
		ClockA -> syncBglobalclock_testclosed_startAction )
		Clock globalclock_test : clock
	}
}