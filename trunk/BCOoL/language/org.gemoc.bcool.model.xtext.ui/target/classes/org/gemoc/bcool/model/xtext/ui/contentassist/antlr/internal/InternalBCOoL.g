/*
* generated by Xtext
*/
grammar InternalBCOoL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.gemoc.bcool.model.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gemoc.bcool.model.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.gemoc.bcool.model.xtext.services.BCOoLGrammarAccess;

}

@parser::members {
 
 	private BCOoLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BCOoLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleBCoolSpec
entryRuleBCoolSpec 
:
{ before(grammarAccess.getBCoolSpecRule()); }
	 ruleBCoolSpec
{ after(grammarAccess.getBCoolSpecRule()); } 
	 EOF 
;

// Rule BCoolSpec
ruleBCoolSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBCoolSpecAccess().getGroup()); }
(rule__BCoolSpec__Group__0)
{ after(grammarAccess.getBCoolSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBCoolOperatorSpec
entryRuleBCoolOperatorSpec 
:
{ before(grammarAccess.getBCoolOperatorSpecRule()); }
	 ruleBCoolOperatorSpec
{ after(grammarAccess.getBCoolOperatorSpecRule()); } 
	 EOF 
;

// Rule BCoolOperatorSpec
ruleBCoolOperatorSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getGroup()); }
(rule__BCoolOperatorSpec__Group__0)
{ after(grammarAccess.getBCoolOperatorSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleglobalDSEsRule
entryRuleglobalDSEsRule 
:
{ before(grammarAccess.getGlobalDSEsRuleRule()); }
	 ruleglobalDSEsRule
{ after(grammarAccess.getGlobalDSEsRuleRule()); } 
	 EOF 
;

// Rule globalDSEsRule
ruleglobalDSEsRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalDSEsRuleAccess().getGroup()); }
(rule__GlobalDSEsRule__Group__0)
{ after(grammarAccess.getGlobalDSEsRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleglobalEventExpressionRule
entryRuleglobalEventExpressionRule 
:
{ before(grammarAccess.getGlobalEventExpressionRuleRule()); }
	 ruleglobalEventExpressionRule
{ after(grammarAccess.getGlobalEventExpressionRuleRule()); } 
	 EOF 
;

// Rule globalEventExpressionRule
ruleglobalEventExpressionRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalEventExpressionRuleAccess().getGroup()); }
(rule__GlobalEventExpressionRule__Group__0)
{ after(grammarAccess.getGlobalEventExpressionRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBCoolCompositionRule
entryRuleBCoolCompositionRule 
:
{ before(grammarAccess.getBCoolCompositionRuleRule()); }
	 ruleBCoolCompositionRule
{ after(grammarAccess.getBCoolCompositionRuleRule()); } 
	 EOF 
;

// Rule BCoolCompositionRule
ruleBCoolCompositionRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getGroup()); }
(rule__BCoolCompositionRule__Group__0)
{ after(grammarAccess.getBCoolCompositionRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBCoolOperatorArg
entryRuleBCoolOperatorArg 
:
{ before(grammarAccess.getBCoolOperatorArgRule()); }
	 ruleBCoolOperatorArg
{ after(grammarAccess.getBCoolOperatorArgRule()); } 
	 EOF 
;

// Rule BCoolOperatorArg
ruleBCoolOperatorArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getGroup()); }
(rule__BCoolOperatorArg__Group__0)
{ after(grammarAccess.getBCoolOperatorArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatchingRule
entryRuleMatchingRule 
:
{ before(grammarAccess.getMatchingRuleRule()); }
	 ruleMatchingRule
{ after(grammarAccess.getMatchingRuleRule()); } 
	 EOF 
;

// Rule MatchingRule
ruleMatchingRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchingRuleAccess().getGroup()); }
(rule__MatchingRule__Group__0)
{ after(grammarAccess.getMatchingRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventExpression
entryRuleEventExpression 
:
{ before(grammarAccess.getEventExpressionRule()); }
	 ruleEventExpression
{ after(grammarAccess.getEventExpressionRule()); } 
	 EOF 
;

// Rule EventExpression
ruleEventExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventExpressionAccess().getGroup()); }
(rule__EventExpression__Group__0)
{ after(grammarAccess.getEventExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoordinationRule
entryRuleCoordinationRule 
:
{ before(grammarAccess.getCoordinationRuleRule()); }
	 ruleCoordinationRule
{ after(grammarAccess.getCoordinationRuleRule()); } 
	 EOF 
;

// Rule CoordinationRule
ruleCoordinationRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordinationRuleAccess().getEventRelationsAssignment()); }
(rule__CoordinationRule__EventRelationsAssignment)
{ after(grammarAccess.getCoordinationRuleAccess().getEventRelationsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventRelation
entryRuleEventRelation 
:
{ before(grammarAccess.getEventRelationRule()); }
	 ruleEventRelation
{ after(grammarAccess.getEventRelationRule()); } 
	 EOF 
;

// Rule EventRelation
ruleEventRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventRelationAccess().getGroup()); }
(rule__EventRelation__Group__0)
{ after(grammarAccess.getEventRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportLibRule
entryRuleImportLibRule 
:
{ before(grammarAccess.getImportLibRuleRule()); }
	 ruleImportLibRule
{ after(grammarAccess.getImportLibRuleRule()); } 
	 EOF 
;

// Rule ImportLibRule
ruleImportLibRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportLibRuleAccess().getGroup()); }
(rule__ImportLibRule__Group__0)
{ after(grammarAccess.getImportLibRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportInterfaceRule
entryRuleImportInterfaceRule 
:
{ before(grammarAccess.getImportInterfaceRuleRule()); }
	 ruleImportInterfaceRule
{ after(grammarAccess.getImportInterfaceRuleRule()); } 
	 EOF 
;

// Rule ImportInterfaceRule
ruleImportInterfaceRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getGroup()); }
(rule__ImportInterfaceRule__Group__0)
{ after(grammarAccess.getImportInterfaceRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGImportStatement
entryRuleGImportStatement 
:
{ before(grammarAccess.getGImportStatementRule()); }
	 ruleGImportStatement
{ after(grammarAccess.getGImportStatementRule()); } 
	 EOF 
;

// Rule GImportStatement
ruleGImportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGImportStatementAccess().getGroup()); }
(rule__GImportStatement__Group__0)
{ after(grammarAccess.getGImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGExpression
entryRuleGExpression 
:
{ before(grammarAccess.getGExpressionRule()); }
	 ruleGExpression
{ after(grammarAccess.getGExpressionRule()); } 
	 EOF 
;

// Rule GExpression
ruleGExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGExpressionAccess().getGOrExpressionParserRuleCall()); }
	ruleGOrExpression
{ after(grammarAccess.getGExpressionAccess().getGOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGOrExpression
entryRuleGOrExpression 
:
{ before(grammarAccess.getGOrExpressionRule()); }
	 ruleGOrExpression
{ after(grammarAccess.getGOrExpressionRule()); } 
	 EOF 
;

// Rule GOrExpression
ruleGOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGOrExpressionAccess().getGroup()); }
(rule__GOrExpression__Group__0)
{ after(grammarAccess.getGOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGXorExpression
entryRuleGXorExpression 
:
{ before(grammarAccess.getGXorExpressionRule()); }
	 ruleGXorExpression
{ after(grammarAccess.getGXorExpressionRule()); } 
	 EOF 
;

// Rule GXorExpression
ruleGXorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGXorExpressionAccess().getGroup()); }
(rule__GXorExpression__Group__0)
{ after(grammarAccess.getGXorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGAndExpression
entryRuleGAndExpression 
:
{ before(grammarAccess.getGAndExpressionRule()); }
	 ruleGAndExpression
{ after(grammarAccess.getGAndExpressionRule()); } 
	 EOF 
;

// Rule GAndExpression
ruleGAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGAndExpressionAccess().getGroup()); }
(rule__GAndExpression__Group__0)
{ after(grammarAccess.getGAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGEqualityExpression
entryRuleGEqualityExpression 
:
{ before(grammarAccess.getGEqualityExpressionRule()); }
	 ruleGEqualityExpression
{ after(grammarAccess.getGEqualityExpressionRule()); } 
	 EOF 
;

// Rule GEqualityExpression
ruleGEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGroup()); }
(rule__GEqualityExpression__Group__0)
{ after(grammarAccess.getGEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGRelationExpression
entryRuleGRelationExpression 
:
{ before(grammarAccess.getGRelationExpressionRule()); }
	 ruleGRelationExpression
{ after(grammarAccess.getGRelationExpressionRule()); } 
	 EOF 
;

// Rule GRelationExpression
ruleGRelationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGroup()); }
(rule__GRelationExpression__Group__0)
{ after(grammarAccess.getGRelationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGAdditionExpression
entryRuleGAdditionExpression 
:
{ before(grammarAccess.getGAdditionExpressionRule()); }
	 ruleGAdditionExpression
{ after(grammarAccess.getGAdditionExpressionRule()); } 
	 EOF 
;

// Rule GAdditionExpression
ruleGAdditionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGroup()); }
(rule__GAdditionExpression__Group__0)
{ after(grammarAccess.getGAdditionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGMultiplicationExpression
entryRuleGMultiplicationExpression 
:
{ before(grammarAccess.getGMultiplicationExpressionRule()); }
	 ruleGMultiplicationExpression
{ after(grammarAccess.getGMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule GMultiplicationExpression
ruleGMultiplicationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGroup()); }
(rule__GMultiplicationExpression__Group__0)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGNegationExpression
entryRuleGNegationExpression 
:
{ before(grammarAccess.getGNegationExpressionRule()); }
	 ruleGNegationExpression
{ after(grammarAccess.getGNegationExpressionRule()); } 
	 EOF 
;

// Rule GNegationExpression
ruleGNegationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGNegationExpressionAccess().getAlternatives()); }
(rule__GNegationExpression__Alternatives)
{ after(grammarAccess.getGNegationExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGNavigationExpression
entryRuleGNavigationExpression 
:
{ before(grammarAccess.getGNavigationExpressionRule()); }
	 ruleGNavigationExpression
{ after(grammarAccess.getGNavigationExpressionRule()); } 
	 EOF 
;

// Rule GNavigationExpression
ruleGNavigationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGroup()); }
(rule__GNavigationExpression__Group__0)
{ after(grammarAccess.getGNavigationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGReferenceExpression
entryRuleGReferenceExpression 
:
{ before(grammarAccess.getGReferenceExpressionRule()); }
	 ruleGReferenceExpression
{ after(grammarAccess.getGReferenceExpressionRule()); } 
	 EOF 
;

// Rule GReferenceExpression
ruleGReferenceExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getAlternatives()); }
(rule__GReferenceExpression__Alternatives)
{ after(grammarAccess.getGReferenceExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGPrimaryExpression
entryRuleGPrimaryExpression 
:
{ before(grammarAccess.getGPrimaryExpressionRule()); }
	 ruleGPrimaryExpression
{ after(grammarAccess.getGPrimaryExpressionRule()); } 
	 EOF 
;

// Rule GPrimaryExpression
ruleGPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGPrimaryExpressionAccess().getAlternatives()); }
(rule__GPrimaryExpression__Alternatives)
{ after(grammarAccess.getGPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGStringExpression
entryRuleGStringExpression 
:
{ before(grammarAccess.getGStringExpressionRule()); }
	 ruleGStringExpression
{ after(grammarAccess.getGStringExpressionRule()); } 
	 EOF 
;

// Rule GStringExpression
ruleGStringExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGStringExpressionAccess().getGroup()); }
(rule__GStringExpression__Group__0)
{ after(grammarAccess.getGStringExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGBooleanExpression
entryRuleGBooleanExpression 
:
{ before(grammarAccess.getGBooleanExpressionRule()); }
	 ruleGBooleanExpression
{ after(grammarAccess.getGBooleanExpressionRule()); } 
	 EOF 
;

// Rule GBooleanExpression
ruleGBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getGroup()); }
(rule__GBooleanExpression__Group__0)
{ after(grammarAccess.getGBooleanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGNumericExpression
entryRuleGNumericExpression 
:
{ before(grammarAccess.getGNumericExpressionRule()); }
	 ruleGNumericExpression
{ after(grammarAccess.getGNumericExpressionRule()); } 
	 EOF 
;

// Rule GNumericExpression
ruleGNumericExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGNumericExpressionAccess().getAlternatives()); }
(rule__GNumericExpression__Alternatives)
{ after(grammarAccess.getGNumericExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGIntegerExpression
entryRuleGIntegerExpression 
:
{ before(grammarAccess.getGIntegerExpressionRule()); }
	 ruleGIntegerExpression
{ after(grammarAccess.getGIntegerExpressionRule()); } 
	 EOF 
;

// Rule GIntegerExpression
ruleGIntegerExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getGroup()); }
(rule__GIntegerExpression__Group__0)
{ after(grammarAccess.getGIntegerExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGDoubleExpression
entryRuleGDoubleExpression 
:
{ before(grammarAccess.getGDoubleExpressionRule()); }
	 ruleGDoubleExpression
{ after(grammarAccess.getGDoubleExpressionRule()); } 
	 EOF 
;

// Rule GDoubleExpression
ruleGDoubleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getGroup()); }
(rule__GDoubleExpression__Group__0)
{ after(grammarAccess.getGDoubleExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGEnumLiteralExpression
entryRuleGEnumLiteralExpression 
:
{ before(grammarAccess.getGEnumLiteralExpressionRule()); }
	 ruleGEnumLiteralExpression
{ after(grammarAccess.getGEnumLiteralExpressionRule()); } 
	 EOF 
;

// Rule GEnumLiteralExpression
ruleGEnumLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getGroup()); }
(rule__GEnumLiteralExpression__Group__0)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGIfExpression
entryRuleGIfExpression 
:
{ before(grammarAccess.getGIfExpressionRule()); }
	 ruleGIfExpression
{ after(grammarAccess.getGIfExpressionRule()); } 
	 EOF 
;

// Rule GIfExpression
ruleGIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGIfExpressionAccess().getGroup()); }
(rule__GIfExpression__Group__0)
{ after(grammarAccess.getGIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGBraceExpression
entryRuleGBraceExpression 
:
{ before(grammarAccess.getGBraceExpressionRule()); }
	 ruleGBraceExpression
{ after(grammarAccess.getGBraceExpressionRule()); } 
	 EOF 
;

// Rule GBraceExpression
ruleGBraceExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGBraceExpressionAccess().getGroup()); }
(rule__GBraceExpression__Group__0)
{ after(grammarAccess.getGBraceExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNavigationOperator
entryRuleNavigationOperator 
:
{ before(grammarAccess.getNavigationOperatorRule()); }
	 ruleNavigationOperator
{ after(grammarAccess.getNavigationOperatorRule()); } 
	 EOF 
;

// Rule NavigationOperator
ruleNavigationOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNavigationOperatorAccess().getAlternatives()); }
(rule__NavigationOperator__Alternatives)
{ after(grammarAccess.getNavigationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule GAndOperator
ruleGAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndOperatorAccess().getANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getGAndOperatorAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GXorOperator
ruleGXorOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorOperatorAccess().getXOREnumLiteralDeclaration()); }
(	'xor' 
)
{ after(grammarAccess.getGXorOperatorAccess().getXOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GOrOperator
ruleGOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrOperatorAccess().getOREnumLiteralDeclaration()); }
(	'or' 
)
{ after(grammarAccess.getGOrOperatorAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GEqualityOperator
ruleGEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityOperatorAccess().getAlternatives()); }
(rule__GEqualityOperator__Alternatives)
{ after(grammarAccess.getGEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GRelationOperator
ruleGRelationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationOperatorAccess().getAlternatives()); }
(rule__GRelationOperator__Alternatives)
{ after(grammarAccess.getGRelationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GAdditionOperator
ruleGAdditionOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionOperatorAccess().getAlternatives()); }
(rule__GAdditionOperator__Alternatives)
{ after(grammarAccess.getGAdditionOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GMultiplicationOperator
ruleGMultiplicationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationOperatorAccess().getAlternatives()); }
(rule__GMultiplicationOperator__Alternatives)
{ after(grammarAccess.getGMultiplicationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GNegationOperator
ruleGNegationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationOperatorAccess().getAlternatives()); }
(rule__GNegationOperator__Alternatives)
{ after(grammarAccess.getGNegationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__GNegationExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getGNavigationExpressionParserRuleCall_0()); }
	ruleGNavigationExpression
{ after(grammarAccess.getGNegationExpressionAccess().getGNavigationExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGNegationExpressionAccess().getGroup_1()); }
(rule__GNegationExpression__Group_1__0)
{ after(grammarAccess.getGNegationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getGPrimaryExpressionParserRuleCall_0()); }
	ruleGPrimaryExpression
{ after(grammarAccess.getGReferenceExpressionAccess().getGPrimaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGReferenceExpressionAccess().getGroup_1()); }
(rule__GReferenceExpression__Group_1__0)
{ after(grammarAccess.getGReferenceExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGStringExpressionParserRuleCall_0()); }
	ruleGStringExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGStringExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGBooleanExpressionParserRuleCall_1()); }
	ruleGBooleanExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGBooleanExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGNumericExpressionParserRuleCall_2()); }
	ruleGNumericExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGNumericExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGEnumLiteralExpressionParserRuleCall_3()); }
	ruleGEnumLiteralExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGEnumLiteralExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGIfExpressionParserRuleCall_4()); }
	ruleGIfExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGIfExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGBraceExpressionParserRuleCall_5()); }
	ruleGBraceExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGBraceExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNumericExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNumericExpressionAccess().getGIntegerExpressionParserRuleCall_0()); }
	ruleGIntegerExpression
{ after(grammarAccess.getGNumericExpressionAccess().getGIntegerExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGNumericExpressionAccess().getGDoubleExpressionParserRuleCall_1()); }
	ruleGDoubleExpression
{ after(grammarAccess.getGNumericExpressionAccess().getGDoubleExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationOperatorAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getNavigationOperatorAccess().getFullStopKeyword_0()); }
)

    |(
{ before(grammarAccess.getNavigationOperatorAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getNavigationOperatorAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getGEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGEqualityOperatorAccess().getNOTEQUALEnumLiteralDeclaration_1()); }
(	'<>' 
)
{ after(grammarAccess.getGEqualityOperatorAccess().getNOTEQUALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGRelationOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGRelationOperatorAccess().getLESSEQUALEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getLESSEQUALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGRelationOperatorAccess().getGREATEREQUALEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getGREATEREQUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionOperatorAccess().getADDITIONEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getGAdditionOperatorAccess().getADDITIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGAdditionOperatorAccess().getSUBTRACTIONEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getGAdditionOperatorAccess().getSUBTRACTIONEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationOperatorAccess().getMULTIPLICATIONEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getGMultiplicationOperatorAccess().getMULTIPLICATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGMultiplicationOperatorAccess().getDIVISIONEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getGMultiplicationOperatorAccess().getDIVISIONEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationOperatorAccess().getNEGATIONEnumLiteralDeclaration_0()); }
(	'not' 
)
{ after(grammarAccess.getGNegationOperatorAccess().getNEGATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGNegationOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'~' 
)
{ after(grammarAccess.getGNegationOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BCoolSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolSpec__Group__0__Impl
	rule__BCoolSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolSpecAccess().getNameAssignment_0()); }
(rule__BCoolSpec__NameAssignment_0)?
{ after(grammarAccess.getBCoolSpecAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolSpec__Group__1__Impl
	rule__BCoolSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBCoolSpecAccess().getImportsLibAssignment_1()); }
(rule__BCoolSpec__ImportsLibAssignment_1)
{ after(grammarAccess.getBCoolSpecAccess().getImportsLibAssignment_1()); }
)
(
{ before(grammarAccess.getBCoolSpecAccess().getImportsLibAssignment_1()); }
(rule__BCoolSpec__ImportsLibAssignment_1)*
{ after(grammarAccess.getBCoolSpecAccess().getImportsLibAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolSpec__Group__2__Impl
	rule__BCoolSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBCoolSpecAccess().getImportsBehavioralInterfaceAssignment_2()); }
(rule__BCoolSpec__ImportsBehavioralInterfaceAssignment_2)
{ after(grammarAccess.getBCoolSpecAccess().getImportsBehavioralInterfaceAssignment_2()); }
)
(
{ before(grammarAccess.getBCoolSpecAccess().getImportsBehavioralInterfaceAssignment_2()); }
(rule__BCoolSpec__ImportsBehavioralInterfaceAssignment_2)*
{ after(grammarAccess.getBCoolSpecAccess().getImportsBehavioralInterfaceAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBCoolSpecAccess().getBcoolOperatorsAssignment_3()); }
(rule__BCoolSpec__BcoolOperatorsAssignment_3)
{ after(grammarAccess.getBCoolSpecAccess().getBcoolOperatorsAssignment_3()); }
)
(
{ before(grammarAccess.getBCoolSpecAccess().getBcoolOperatorsAssignment_3()); }
(rule__BCoolSpec__BcoolOperatorsAssignment_3)*
{ after(grammarAccess.getBCoolSpecAccess().getBcoolOperatorsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BCoolOperatorSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorSpec__Group__0__Impl
	rule__BCoolOperatorSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getSpecKeyword_0()); }

	'Spec' 

{ after(grammarAccess.getBCoolOperatorSpecAccess().getSpecKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorSpec__Group__1__Impl
	rule__BCoolOperatorSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getNameAssignment_1()); }
(rule__BCoolOperatorSpec__NameAssignment_1)
{ after(grammarAccess.getBCoolOperatorSpecAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorSpec__Group__2__Impl
	rule__BCoolOperatorSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getGlobalEventExpressionsAssignment_2()); }
(rule__BCoolOperatorSpec__GlobalEventExpressionsAssignment_2)?
{ after(grammarAccess.getBCoolOperatorSpecAccess().getGlobalEventExpressionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorSpec__Group__3__Impl
	rule__BCoolOperatorSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getGlobalDSEsAssignment_3()); }
(rule__BCoolOperatorSpec__GlobalDSEsAssignment_3)?
{ after(grammarAccess.getBCoolOperatorSpecAccess().getGlobalDSEsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorSpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorSpec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getBcoolCompositionRulesAssignment_4()); }
(rule__BCoolOperatorSpec__BcoolCompositionRulesAssignment_4)
{ after(grammarAccess.getBCoolOperatorSpecAccess().getBcoolCompositionRulesAssignment_4()); }
)
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getBcoolCompositionRulesAssignment_4()); }
(rule__BCoolOperatorSpec__BcoolCompositionRulesAssignment_4)*
{ after(grammarAccess.getBCoolOperatorSpecAccess().getBcoolCompositionRulesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GlobalDSEsRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDSEsRule__Group__0__Impl
	rule__GlobalDSEsRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDSEsRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDSEsRuleAccess().getGlobalEventKeyword_0()); }

	'Global Event' 

{ after(grammarAccess.getGlobalDSEsRuleAccess().getGlobalEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDSEsRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDSEsRule__Group__1__Impl
	rule__GlobalDSEsRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDSEsRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDSEsRuleAccess().getNameAssignment_1()); }
(rule__GlobalDSEsRule__NameAssignment_1)
{ after(grammarAccess.getGlobalDSEsRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDSEsRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalDSEsRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDSEsRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDSEsRuleAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getGlobalDSEsRuleAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GlobalEventExpressionRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEventExpressionRule__Group__0__Impl
	rule__GlobalEventExpressionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEventExpressionRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEventExpressionRuleAccess().getLetKeyword_0()); }

	'let' 

{ after(grammarAccess.getGlobalEventExpressionRuleAccess().getLetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEventExpressionRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEventExpressionRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEventExpressionRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEventExpressionRuleAccess().getEventExpressionParserRuleCall_1()); }
	ruleEventExpression
{ after(grammarAccess.getGlobalEventExpressionRuleAccess().getEventExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BCoolCompositionRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__0__Impl
	rule__BCoolCompositionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getOperatorKeyword_0()); }

	'Operator' 

{ after(grammarAccess.getBCoolCompositionRuleAccess().getOperatorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__1__Impl
	rule__BCoolCompositionRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getNameAssignment_1()); }
(rule__BCoolCompositionRule__NameAssignment_1)
{ after(grammarAccess.getBCoolCompositionRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__2__Impl
	rule__BCoolCompositionRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getBCoolCompositionRuleAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__3__Impl
	rule__BCoolCompositionRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsAssignment_3()); }
(rule__BCoolCompositionRule__BCoolOperatorArgsAssignment_3)
{ after(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__4__Impl
	rule__BCoolCompositionRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getGroup_4()); }
(rule__BCoolCompositionRule__Group_4__0)*
{ after(grammarAccess.getBCoolCompositionRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__5__Impl
	rule__BCoolCompositionRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getBCoolCompositionRuleAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__6__Impl
	rule__BCoolCompositionRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getMatchingCorrespondanceKeyword_6()); }

	'MatchingCorrespondance:' 

{ after(grammarAccess.getBCoolCompositionRuleAccess().getMatchingCorrespondanceKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__7__Impl
	rule__BCoolCompositionRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getMatchingRuleAssignment_7()); }
(rule__BCoolCompositionRule__MatchingRuleAssignment_7)
{ after(grammarAccess.getBCoolCompositionRuleAccess().getMatchingRuleAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__8__Impl
	rule__BCoolCompositionRule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getCoordinationRuleAssignment_8()); }
(rule__BCoolCompositionRule__CoordinationRuleAssignment_8)
{ after(grammarAccess.getBCoolCompositionRuleAccess().getCoordinationRuleAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getEndOperatorKeyword_9()); }

	'end operator;' 

{ after(grammarAccess.getBCoolCompositionRuleAccess().getEndOperatorKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__BCoolCompositionRule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group_4__0__Impl
	rule__BCoolCompositionRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getBCoolCompositionRuleAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolCompositionRule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolCompositionRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsAssignment_4_1()); }
(rule__BCoolCompositionRule__BCoolOperatorArgsAssignment_4_1)
{ after(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BCoolOperatorArg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorArg__Group__0__Impl
	rule__BCoolOperatorArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getNameAssignment_0()); }
(rule__BCoolOperatorArg__NameAssignment_0)
{ after(grammarAccess.getBCoolOperatorArgAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorArg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorArg__Group__1__Impl
	rule__BCoolOperatorArg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getSpaceColonSpaceKeyword_1()); }

	' : ' 

{ after(grammarAccess.getBCoolOperatorArgAccess().getSpaceColonSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorArg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorArg__Group__2__Impl
	rule__BCoolOperatorArg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getInterfaceAssignment_2()); }
(rule__BCoolOperatorArg__InterfaceAssignment_2)
{ after(grammarAccess.getBCoolOperatorArgAccess().getInterfaceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorArg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorArg__Group__3__Impl
	rule__BCoolOperatorArg__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getColonColonKeyword_3()); }

	'::' 

{ after(grammarAccess.getBCoolOperatorArgAccess().getColonColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BCoolOperatorArg__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BCoolOperatorArg__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getDSEAssignment_4()); }
(rule__BCoolOperatorArg__DSEAssignment_4)
{ after(grammarAccess.getBCoolOperatorArgAccess().getDSEAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MatchingRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group__0__Impl
	rule__MatchingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getMatchingRuleAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group__1__Impl
	rule__MatchingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getConditionAssignment_1()); }
(rule__MatchingRule__ConditionAssignment_1)
{ after(grammarAccess.getMatchingRuleAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group__2__Impl
	rule__MatchingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getMatchingRuleAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group__3__Impl
	rule__MatchingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getCoordinationRuleKeyword_3()); }

	'CoordinationRule:' 

{ after(grammarAccess.getMatchingRuleAccess().getCoordinationRuleKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getGroup_4()); }
(rule__MatchingRule__Group_4__0)*
{ after(grammarAccess.getMatchingRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MatchingRule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group_4__0__Impl
	rule__MatchingRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getLocalEventKeyword_4_0()); }

	'Local Event' 

{ after(grammarAccess.getMatchingRuleAccess().getLocalEventKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group_4__1__Impl
	rule__MatchingRule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getFilterEventExpressionsAssignment_4_1()); }
(rule__MatchingRule__FilterEventExpressionsAssignment_4_1)
{ after(grammarAccess.getMatchingRuleAccess().getFilterEventExpressionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchingRule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getMatchingRuleAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EventExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group__0__Impl
	rule__EventExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getNameAssignment_0()); }
(rule__EventExpression__NameAssignment_0)
{ after(grammarAccess.getEventExpressionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group__1__Impl
	rule__EventExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getEventExpressionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group__2__Impl
	rule__EventExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getDeclarationAssignment_2()); }
(rule__EventExpression__DeclarationAssignment_2)
{ after(grammarAccess.getEventExpressionAccess().getDeclarationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group__3__Impl
	rule__EventExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getEventExpressionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group__4__Impl
	rule__EventExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getGroup_4()); }
(rule__EventExpression__Group_4__0)?
{ after(grammarAccess.getEventExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getEventExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EventExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group_4__0__Impl
	rule__EventExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getActualParametersAssignment_4_0()); }
(rule__EventExpression__ActualParametersAssignment_4_0)
{ after(grammarAccess.getEventExpressionAccess().getActualParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getGroup_4_1()); }
(rule__EventExpression__Group_4_1__0)*
{ after(grammarAccess.getEventExpressionAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventExpression__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group_4_1__0__Impl
	rule__EventExpression__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getEventExpressionAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventExpression__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventExpression__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getActualParametersAssignment_4_1_1()); }
(rule__EventExpression__ActualParametersAssignment_4_1_1)
{ after(grammarAccess.getEventExpressionAccess().getActualParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventRelation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group__0__Impl
	rule__EventRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getEventRelationAction_0()); }
(

)
{ after(grammarAccess.getEventRelationAccess().getEventRelationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventRelation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group__1__Impl
	rule__EventRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getDeclarationAssignment_1()); }
(rule__EventRelation__DeclarationAssignment_1)
{ after(grammarAccess.getEventRelationAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventRelation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group__2__Impl
	rule__EventRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getEventRelationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventRelation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group__3__Impl
	rule__EventRelation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getGroup_3()); }
(rule__EventRelation__Group_3__0)?
{ after(grammarAccess.getEventRelationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventRelation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getEventRelationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EventRelation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group_3__0__Impl
	rule__EventRelation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getActualParametersAssignment_3_0()); }
(rule__EventRelation__ActualParametersAssignment_3_0)
{ after(grammarAccess.getEventRelationAccess().getActualParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventRelation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getGroup_3_1()); }
(rule__EventRelation__Group_3_1__0)*
{ after(grammarAccess.getEventRelationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventRelation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group_3_1__0__Impl
	rule__EventRelation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getEventRelationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventRelation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventRelation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getActualParametersAssignment_3_1_1()); }
(rule__EventRelation__ActualParametersAssignment_3_1_1)
{ after(grammarAccess.getEventRelationAccess().getActualParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportLibRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportLibRule__Group__0__Impl
	rule__ImportLibRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportLibRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportLibRuleAccess().getImportLibKeyword_0()); }

	'ImportLib' 

{ after(grammarAccess.getImportLibRuleAccess().getImportLibKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportLibRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportLibRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportLibRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportLibRuleAccess().getImportURIAssignment_1()); }
(rule__ImportLibRule__ImportURIAssignment_1)
{ after(grammarAccess.getImportLibRuleAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportInterfaceRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInterfaceRule__Group__0__Impl
	rule__ImportInterfaceRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInterfaceRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getImportInterfaceKeyword_0()); }

	'ImportInterface' 

{ after(grammarAccess.getImportInterfaceRuleAccess().getImportInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportInterfaceRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInterfaceRule__Group__1__Impl
	rule__ImportInterfaceRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInterfaceRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getImportURIAssignment_1()); }
(rule__ImportInterfaceRule__ImportURIAssignment_1)
{ after(grammarAccess.getImportInterfaceRuleAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportInterfaceRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInterfaceRule__Group__2__Impl
	rule__ImportInterfaceRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInterfaceRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getImportInterfaceRuleAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportInterfaceRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInterfaceRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInterfaceRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getNameAssignment_3()); }
(rule__ImportInterfaceRule__NameAssignment_3)
{ after(grammarAccess.getImportInterfaceRuleAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__GImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GImportStatement__Group__0__Impl
	rule__GImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGImportStatementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getGImportStatementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GImportStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGImportStatementAccess().getImportURIAssignment_1()); }
(rule__GImportStatement__ImportURIAssignment_1)
{ after(grammarAccess.getGImportStatementAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group__0__Impl
	rule__GOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getGXorExpressionParserRuleCall_0()); }
	ruleGXorExpression
{ after(grammarAccess.getGOrExpressionAccess().getGXorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getGroup_1()); }
(rule__GOrExpression__Group_1__0)*
{ after(grammarAccess.getGOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group_1__0__Impl
	rule__GOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getGOrExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGOrExpressionAccess().getGOrExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group_1__1__Impl
	rule__GOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GOrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GOrExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGOrExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GXorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group__0__Impl
	rule__GXorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getGAndExpressionParserRuleCall_0()); }
	ruleGAndExpression
{ after(grammarAccess.getGXorExpressionAccess().getGAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GXorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getGroup_1()); }
(rule__GXorExpression__Group_1__0)*
{ after(grammarAccess.getGXorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GXorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group_1__0__Impl
	rule__GXorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getGXorExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGXorExpressionAccess().getGXorExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GXorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group_1__1__Impl
	rule__GXorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GXorExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGXorExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GXorExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GXorExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGXorExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group__0__Impl
	rule__GAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getGEqualityExpressionParserRuleCall_0()); }
	ruleGEqualityExpression
{ after(grammarAccess.getGAndExpressionAccess().getGEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getGroup_1()); }
(rule__GAndExpression__Group_1__0)*
{ after(grammarAccess.getGAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group_1__0__Impl
	rule__GAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getGAndExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGAndExpressionAccess().getGAndExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group_1__1__Impl
	rule__GAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GAndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GAndExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGAndExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group__0__Impl
	rule__GEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGRelationExpressionParserRuleCall_0()); }
	ruleGRelationExpression
{ after(grammarAccess.getGEqualityExpressionAccess().getGRelationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGroup_1()); }
(rule__GEqualityExpression__Group_1__0)*
{ after(grammarAccess.getGEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group_1__0__Impl
	rule__GEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGEqualityExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGEqualityExpressionAccess().getGEqualityExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group_1__1__Impl
	rule__GEqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GEqualityExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GEqualityExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGEqualityExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GRelationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group__0__Impl
	rule__GRelationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGAdditionExpressionParserRuleCall_0()); }
	ruleGAdditionExpression
{ after(grammarAccess.getGRelationExpressionAccess().getGAdditionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GRelationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGroup_1()); }
(rule__GRelationExpression__Group_1__0)*
{ after(grammarAccess.getGRelationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GRelationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group_1__0__Impl
	rule__GRelationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGRelationExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGRelationExpressionAccess().getGRelationExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GRelationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group_1__1__Impl
	rule__GRelationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GRelationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGRelationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GRelationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GRelationExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGRelationExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GAdditionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group__0__Impl
	rule__GAdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGMultiplicationExpressionParserRuleCall_0()); }
	ruleGMultiplicationExpression
{ after(grammarAccess.getGAdditionExpressionAccess().getGMultiplicationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAdditionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGroup_1()); }
(rule__GAdditionExpression__Group_1__0)*
{ after(grammarAccess.getGAdditionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GAdditionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group_1__0__Impl
	rule__GAdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGAdditionExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGAdditionExpressionAccess().getGAdditionExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAdditionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group_1__1__Impl
	rule__GAdditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GAdditionExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGAdditionExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAdditionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GAdditionExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGAdditionExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GMultiplicationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group__0__Impl
	rule__GMultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGNegationExpressionParserRuleCall_0()); }
	ruleGNegationExpression
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGNegationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GMultiplicationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGroup_1()); }
(rule__GMultiplicationExpression__Group_1__0)*
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GMultiplicationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group_1__0__Impl
	rule__GMultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGMultiplicationExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGMultiplicationExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GMultiplicationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group_1__1__Impl
	rule__GMultiplicationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GMultiplicationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GMultiplicationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GMultiplicationExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GNegationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNegationExpression__Group_1__0__Impl
	rule__GNegationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getGNegationExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getGNegationExpressionAccess().getGNegationExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNegationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNegationExpression__Group_1__1__Impl
	rule__GNegationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GNegationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGNegationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNegationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNegationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperandAssignment_1_2()); }
(rule__GNegationExpression__OperandAssignment_1_2)
{ after(grammarAccess.getGNegationExpressionAccess().getOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GNavigationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group__0__Impl
	rule__GNavigationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGReferenceExpressionParserRuleCall_0()); }
	ruleGReferenceExpression
{ after(grammarAccess.getGNavigationExpressionAccess().getGReferenceExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNavigationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGroup_1()); }
(rule__GNavigationExpression__Group_1__0)*
{ after(grammarAccess.getGNavigationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GNavigationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group_1__0__Impl
	rule__GNavigationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGNavigationExpressionBodyAction_1_0()); }
(

)
{ after(grammarAccess.getGNavigationExpressionAccess().getGNavigationExpressionBodyAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNavigationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group_1__1__Impl
	rule__GNavigationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getNavigationOperatorParserRuleCall_1_1()); }
	ruleNavigationOperator
{ after(grammarAccess.getGNavigationExpressionAccess().getNavigationOperatorParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNavigationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectAssignment_1_2()); }
(rule__GNavigationExpression__ReferencedEObjectAssignment_1_2)
{ after(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GReferenceExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GReferenceExpression__Group_1__0__Impl
	rule__GReferenceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getGReferenceExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getGReferenceExpressionAccess().getGReferenceExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GReferenceExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GReferenceExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectAssignment_1_1()); }
(rule__GReferenceExpression__ReferencedEObjectAssignment_1_1)
{ after(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GStringExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GStringExpression__Group__0__Impl
	rule__GStringExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GStringExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGStringExpressionAccess().getGStringExpressionAction_0()); }
(

)
{ after(grammarAccess.getGStringExpressionAccess().getGStringExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GStringExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GStringExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GStringExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGStringExpressionAccess().getValueAssignment_1()); }
(rule__GStringExpression__ValueAssignment_1)
{ after(grammarAccess.getGStringExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GBooleanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBooleanExpression__Group__0__Impl
	rule__GBooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GBooleanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getGBooleanExpressionAction_0()); }
(

)
{ after(grammarAccess.getGBooleanExpressionAccess().getGBooleanExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBooleanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GBooleanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getValueAssignment_1()); }
(rule__GBooleanExpression__ValueAssignment_1)
{ after(grammarAccess.getGBooleanExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GIntegerExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIntegerExpression__Group__0__Impl
	rule__GIntegerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GIntegerExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getGIntegerExpressionAction_0()); }
(

)
{ after(grammarAccess.getGIntegerExpressionAccess().getGIntegerExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIntegerExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIntegerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GIntegerExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getValueAssignment_1()); }
(rule__GIntegerExpression__ValueAssignment_1)
{ after(grammarAccess.getGIntegerExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GDoubleExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GDoubleExpression__Group__0__Impl
	rule__GDoubleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GDoubleExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getGDoubleExpressionAction_0()); }
(

)
{ after(grammarAccess.getGDoubleExpressionAccess().getGDoubleExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GDoubleExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GDoubleExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GDoubleExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getValueAssignment_1()); }
(rule__GDoubleExpression__ValueAssignment_1)
{ after(grammarAccess.getGDoubleExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GEnumLiteralExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEnumLiteralExpression__Group__0__Impl
	rule__GEnumLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getGEnumLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getGEnumLiteralExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEnumLiteralExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEnumLiteralExpression__Group__1__Impl
	rule__GEnumLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getGEnumLiteralExpressionAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEnumLiteralExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEnumLiteralExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getValueAssignment_2()); }
(rule__GEnumLiteralExpression__ValueAssignment_2)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__0__Impl
	rule__GIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getGIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getGIfExpressionAccess().getGIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__1__Impl
	rule__GIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getGIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__2__Impl
	rule__GIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getConditionAssignment_2()); }
(rule__GIfExpression__ConditionAssignment_2)
{ after(grammarAccess.getGIfExpressionAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__3__Impl
	rule__GIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getThenKeyword_3()); }

	'then' 

{ after(grammarAccess.getGIfExpressionAccess().getThenKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__4__Impl
	rule__GIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getThenExpressionAssignment_4()); }
(rule__GIfExpression__ThenExpressionAssignment_4)
{ after(grammarAccess.getGIfExpressionAccess().getThenExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__5__Impl
	rule__GIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getElseKeyword_5()); }

	'else' 

{ after(grammarAccess.getGIfExpressionAccess().getElseKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__6__Impl
	rule__GIfExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getElseExpressionAssignment_6()); }
(rule__GIfExpression__ElseExpressionAssignment_6)
{ after(grammarAccess.getGIfExpressionAccess().getElseExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getEndifKeyword_7()); }

	'endif' 

{ after(grammarAccess.getGIfExpressionAccess().getEndifKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__GBraceExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__0__Impl
	rule__GBraceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getGBraceExpressionAction_0()); }
(

)
{ after(grammarAccess.getGBraceExpressionAccess().getGBraceExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBraceExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__1__Impl
	rule__GBraceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getGBraceExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBraceExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__2__Impl
	rule__GBraceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getInnerExpressionAssignment_2()); }
(rule__GBraceExpression__InnerExpressionAssignment_2)
{ after(grammarAccess.getGBraceExpressionAccess().getInnerExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBraceExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getGBraceExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__BCoolSpec__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolSpecAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getBCoolSpecAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__ImportsLibAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolSpecAccess().getImportsLibImportLibRuleParserRuleCall_1_0()); }
	ruleImportLibRule{ after(grammarAccess.getBCoolSpecAccess().getImportsLibImportLibRuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__ImportsBehavioralInterfaceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolSpecAccess().getImportsBehavioralInterfaceImportInterfaceRuleParserRuleCall_2_0()); }
	ruleImportInterfaceRule{ after(grammarAccess.getBCoolSpecAccess().getImportsBehavioralInterfaceImportInterfaceRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolSpec__BcoolOperatorsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolSpecAccess().getBcoolOperatorsBCoolOperatorSpecParserRuleCall_3_0()); }
	ruleBCoolOperatorSpec{ after(grammarAccess.getBCoolSpecAccess().getBcoolOperatorsBCoolOperatorSpecParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBCoolOperatorSpecAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__GlobalEventExpressionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getGlobalEventExpressionsGlobalEventExpressionRuleParserRuleCall_2_0()); }
	ruleglobalEventExpressionRule{ after(grammarAccess.getBCoolOperatorSpecAccess().getGlobalEventExpressionsGlobalEventExpressionRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__GlobalDSEsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getGlobalDSEsGlobalDSEsRuleParserRuleCall_3_0()); }
	ruleglobalDSEsRule{ after(grammarAccess.getBCoolOperatorSpecAccess().getGlobalDSEsGlobalDSEsRuleParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorSpec__BcoolCompositionRulesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorSpecAccess().getBcoolCompositionRulesBCoolCompositionRuleParserRuleCall_4_0()); }
	ruleBCoolCompositionRule{ after(grammarAccess.getBCoolOperatorSpecAccess().getBcoolCompositionRulesBCoolCompositionRuleParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDSEsRule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalDSEsRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGlobalDSEsRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBCoolCompositionRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__BCoolOperatorArgsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsBCoolOperatorArgParserRuleCall_3_0()); }
	ruleBCoolOperatorArg{ after(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsBCoolOperatorArgParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__BCoolOperatorArgsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsBCoolOperatorArgParserRuleCall_4_1_0()); }
	ruleBCoolOperatorArg{ after(grammarAccess.getBCoolCompositionRuleAccess().getBCoolOperatorArgsBCoolOperatorArgParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__MatchingRuleAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getMatchingRuleMatchingRuleParserRuleCall_7_0()); }
	ruleMatchingRule{ after(grammarAccess.getBCoolCompositionRuleAccess().getMatchingRuleMatchingRuleParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolCompositionRule__CoordinationRuleAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolCompositionRuleAccess().getCoordinationRuleCoordinationRuleParserRuleCall_8_0()); }
	ruleCoordinationRule{ after(grammarAccess.getBCoolCompositionRuleAccess().getCoordinationRuleCoordinationRuleParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getBCoolOperatorArgAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__InterfaceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getInterfaceImportInterfaceStatementCrossReference_2_0()); }
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getInterfaceImportInterfaceStatementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBCoolOperatorArgAccess().getInterfaceImportInterfaceStatementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBCoolOperatorArgAccess().getInterfaceImportInterfaceStatementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BCoolOperatorArg__DSEAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getDSEECLDefCSCrossReference_4_0()); }
(
{ before(grammarAccess.getBCoolOperatorArgAccess().getDSEECLDefCSIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getBCoolOperatorArgAccess().getDSEECLDefCSIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getBCoolOperatorArgAccess().getDSEECLDefCSCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getConditionGExpressionParserRuleCall_1_0()); }
	ruleGExpression{ after(grammarAccess.getMatchingRuleAccess().getConditionGExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__FilterEventExpressionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchingRuleAccess().getFilterEventExpressionsEventExpressionParserRuleCall_4_1_0()); }
	ruleEventExpression{ after(grammarAccess.getMatchingRuleAccess().getFilterEventExpressionsEventExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEventExpressionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__DeclarationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getDeclarationExpressionDeclarationCrossReference_2_0()); }
(
{ before(grammarAccess.getEventExpressionAccess().getDeclarationExpressionDeclarationQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEventExpressionAccess().getDeclarationExpressionDeclarationQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getEventExpressionAccess().getDeclarationExpressionDeclarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__ActualParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getActualParametersEObjectCrossReference_4_0_0()); }
(
{ before(grammarAccess.getEventExpressionAccess().getActualParametersEObjectIDTerminalRuleCall_4_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEventExpressionAccess().getActualParametersEObjectIDTerminalRuleCall_4_0_0_1()); }
)
{ after(grammarAccess.getEventExpressionAccess().getActualParametersEObjectCrossReference_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventExpression__ActualParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventExpressionAccess().getActualParametersEObjectCrossReference_4_1_1_0()); }
(
{ before(grammarAccess.getEventExpressionAccess().getActualParametersEObjectIDTerminalRuleCall_4_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEventExpressionAccess().getActualParametersEObjectIDTerminalRuleCall_4_1_1_0_1()); }
)
{ after(grammarAccess.getEventExpressionAccess().getActualParametersEObjectCrossReference_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinationRule__EventRelationsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinationRuleAccess().getEventRelationsEventRelationParserRuleCall_0()); }
	ruleEventRelation{ after(grammarAccess.getCoordinationRuleAccess().getEventRelationsEventRelationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getDeclarationRelationDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getEventRelationAccess().getDeclarationRelationDeclarationQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEventRelationAccess().getDeclarationRelationDeclarationQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEventRelationAccess().getDeclarationRelationDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__ActualParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSCrossReference_3_0_0()); }
(
{ before(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSIDTerminalRuleCall_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSIDTerminalRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventRelation__ActualParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSIDTerminalRuleCall_3_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSIDTerminalRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getEventRelationAccess().getActualParametersECLDefCSCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportLibRule__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportLibRuleAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportLibRuleAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInterfaceRule__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportInterfaceRuleAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInterfaceRule__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInterfaceRuleAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getImportInterfaceRuleAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__GImportStatement__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getOperatorGOrOperatorEnumRuleCall_1_1_0()); }
	ruleGOrOperator{ after(grammarAccess.getGOrExpressionAccess().getOperatorGOrOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getRightOperandGXorExpressionParserRuleCall_1_2_0()); }
	ruleGXorExpression{ after(grammarAccess.getGOrExpressionAccess().getRightOperandGXorExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getOperatorGXorOperatorEnumRuleCall_1_1_0()); }
	ruleGXorOperator{ after(grammarAccess.getGXorExpressionAccess().getOperatorGXorOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getRightOperandGAndExpressionParserRuleCall_1_2_0()); }
	ruleGAndExpression{ after(grammarAccess.getGXorExpressionAccess().getRightOperandGAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getOperatorGAndOperatorEnumRuleCall_1_1_0()); }
	ruleGAndOperator{ after(grammarAccess.getGAndExpressionAccess().getOperatorGAndOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getRightOperandGEqualityExpressionParserRuleCall_1_2_0()); }
	ruleGEqualityExpression{ after(grammarAccess.getGAndExpressionAccess().getRightOperandGEqualityExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getOperatorGEqualityOperatorEnumRuleCall_1_1_0()); }
	ruleGEqualityOperator{ after(grammarAccess.getGEqualityExpressionAccess().getOperatorGEqualityOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getRightOperandGRelationExpressionParserRuleCall_1_2_0()); }
	ruleGRelationExpression{ after(grammarAccess.getGEqualityExpressionAccess().getRightOperandGRelationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getOperatorGRelationOperatorEnumRuleCall_1_1_0()); }
	ruleGRelationOperator{ after(grammarAccess.getGRelationExpressionAccess().getOperatorGRelationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getRightOperandGAdditionExpressionParserRuleCall_1_2_0()); }
	ruleGAdditionExpression{ after(grammarAccess.getGRelationExpressionAccess().getRightOperandGAdditionExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getOperatorGAdditionOperatorEnumRuleCall_1_1_0()); }
	ruleGAdditionOperator{ after(grammarAccess.getGAdditionExpressionAccess().getOperatorGAdditionOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getRightOperandGMultiplicationExpressionParserRuleCall_1_2_0()); }
	ruleGMultiplicationExpression{ after(grammarAccess.getGAdditionExpressionAccess().getRightOperandGMultiplicationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getOperatorGMultiplicationOperatorEnumRuleCall_1_1_0()); }
	ruleGMultiplicationOperator{ after(grammarAccess.getGMultiplicationExpressionAccess().getOperatorGMultiplicationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandGNegationExpressionParserRuleCall_1_2_0()); }
	ruleGNegationExpression{ after(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandGNegationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperatorGNegationOperatorEnumRuleCall_1_1_0()); }
	ruleGNegationOperator{ after(grammarAccess.getGNegationExpressionAccess().getOperatorGNegationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__OperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperandGNavigationExpressionParserRuleCall_1_2_0()); }
	ruleGNavigationExpression{ after(grammarAccess.getGNegationExpressionAccess().getOperandGNavigationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__ReferencedEObjectAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectCrossReference_1_2_0()); }
(
{ before(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__ReferencedEObjectAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectCrossReference_1_1_0()); }
(
{ before(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GStringExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGStringExpressionAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGStringExpressionAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GBooleanExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getGBooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIntegerExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getGIntegerExpressionAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GDoubleExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getValueDOUBLETerminalRuleCall_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getGDoubleExpressionAccess().getValueDOUBLETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralCrossReference_2_0()); }
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getConditionGExpressionParserRuleCall_2_0()); }
	ruleGExpression{ after(grammarAccess.getGIfExpressionAccess().getConditionGExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__ThenExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getThenExpressionGExpressionParserRuleCall_4_0()); }
	ruleGExpression{ after(grammarAccess.getGIfExpressionAccess().getThenExpressionGExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__ElseExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getElseExpressionGExpressionParserRuleCall_6_0()); }
	ruleGExpression{ after(grammarAccess.getGIfExpressionAccess().getElseExpressionGExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__InnerExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getInnerExpressionGExpressionParserRuleCall_2_0()); }
	ruleGExpression{ after(grammarAccess.getGBraceExpressionAccess().getInnerExpressionGExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : ('-'|'+')? (RULE_INT '.' RULE_INT|'.' RULE_INT|RULE_INT '.') ('e' ('-'|'+') RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


