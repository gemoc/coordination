/*******************************************************************************
 * Copyright (c) 2015, 2017  I3S Laboratory  and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     I3S Laboratory - initial API and implementation
 *******************************************************************************/
/*
* generated by Xtext
*/
package org.eclipse.gemoc.bcool.model.xtext.ui.labeling

import com.google.inject.Inject
import org.eclipse.jface.resource.ImageDescriptor
import org.eclipse.xtext.common.types.JvmOperation
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class BCOoLLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	override
	def public ImageDescriptor getImageDescriptor(Object element) {
		if (!(element instanceof JvmOperation)){
			val Object image = doGetImage(element);
			val ImageDescriptor imageDescriptor = convertToImageDescriptor(image);
			return imageDescriptor;
		}
		return null
	}


	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
